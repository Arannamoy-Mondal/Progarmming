#include<bits/stdc++.h>
//#include<ext/pb_ds/assoc_container.hpp>
//#include<ext/pb_ds/tree_policy.hpp>
#define int long long
#define nl "\n"
#define blk " "
#define rep(i,in,n) for(int i=in;i<n;i++)
#define pb push_back
#ifndef ONLINE_JUDGE
#define debug(a) cerr<<#a<<blk<<a<<nl;
#define sep(a) cerr<<#a<<#a<<#a<<#a<<#a<<#a<<#a<<endl;
#else
#define debug(a)
#define sep(a)
#endif
const int N=1e7+5;
//using namespace __gnu_pbds;
using namespace std;
//template <typename T> using pbds = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
int power(int x,int y)
{
    int res=1;
    while(y)
    {
        if(y&1)
        {
            res*=x;
            //res%=N;
        }
        x*=x;
        //x%=N,
        y>>=1;
    }
    return res;
}
void solve();
int32_t main()
{
 ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
auto cl=clock();
#ifndef ONLINE_JUDGE
  freopen("input.txt","r",stdin);
#endif
 int ts=1;
 cin>>ts;
 rep(t,1,ts+1)
 {
    //debug(t)
    solve();
 }
cerr<<nl<<1.00*(clock()-cl)/CLOCKS_PER_SEC;
}
void solve()
{
 int n;
 cin>>n;
 int a[n],b[n];
 rep(i,0,n)cin>>a[i];
 rep(i,0,n)cin>>b[i];
 int count = 0,P = 0,N = 0;
 rep(i,0,n){
      if(a[i]==b[i] && b[i]==-1)N--;
      if(a[i]==b[i] && b[i]==1)P++;
    }
    int A = 0,B = 0;
    for(auto i = 0;i<n;i++){
        if(a[i]>b[i])A+=a[i];
        if(a[i]<b[i])B+=b[i];
        
      }
      if(A>B) swap(A,B);
      count = P;
      int x = min(B-A,count);
      A+=x;
      count-=x;
      x = count/2;
      count-=x;
      A+=max(x,count);
      B+=min(x,count);
      if(A>B) swap(A,B);
      count = N;
      x = max(A-B,count);
      B+=x;
      count-=x;
      x=count/2;
      count-=x;
      A+=max(x,count);
      B+=min(x,count);
      cout<<min(A,B)<<endl;
}
/*
0
-1
1
1
*/